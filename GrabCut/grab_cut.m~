%% Read image and take input; initialize
% for color images
clc;clear; close all; addpath('gco-v3.0/matlab')
im_clr = imread('rose_small.jpg');
im = im_clr;
rect = rectInput(im_clr); % Take input
sz = size(im);
sz = sz(1:2);

N = sz(1)*sz(2);
Z = double(reshape(im,N,3));

alpha = ones(sz(1),sz(2));
alpha(rect(1):rect(1)+rect(3),rect(2):rect(2)+rect(4)) = 2;
alpha = alpha(:);

im_crop_clr = im_clr(rect(1):rect(1)+rect(3),rect(2):rect(2)+rect(4),:);
N_crop = size(im_crop_clr,1)*size(im_crop_clr,2);


%% Pairwise
gamma = 50; %for smoothening
beta = 1e-2*0.5/mean2((Z - circshift(Z,1)).^2); %for smoothening contrast
k = 3; %number of components in gmm

pairwise = assmeblePairwise(im,gamma,beta);

maxIter = 1;
for i = 1:maxIter 
    %% Unary
    tic
    gmm_back = gmdistribution.fit(Z(alpha == 1,:),k);
    gmm_fore = gmdistribution.fit(Z(alpha == 2,:),k);
    toc
    
    pdf_back = -log(pdf(gmm_back,Z));
    pdf_fore = -log(pdf(gmm_fore,Z);
    
    %% GCO
    gc_obj = GCO_Create(N,2);
    GCO_SetDataCost(gc_obj,int32(unary))
    %GCO_SetSmoothCost(gc_obj,ones(2)-eye(2))
    GCO_SetNeighbors(gc_obj,pairwise)
    GCO_Expansion(gc_obj);
    labels = GCO_GetLabeling(gc_obj);
    GCO_Delete(gc_obj)
    alpha = labels;
    
end
%% Results
figure
imshow(cutImage(im_clr,labels,2))
title(num2str(beta))

figure
subplot(1,2,1)
imshow(cutImage(im_clr,labels,2))
subplot(1,2,2)
imshow(reshape(double(labels-1),sz))%% Read image and take input
clc;clear; addpath('GCMex')
im = im2double(imread('rose.jpg'));
rect = rectInput(im); % Take input
sz = size(im);
sz = sz(1:2);

%% Intialization - fit GMM to background and foreground
K_num = 4; %GMM components


crop = ones(size(im));
crop(rect(1):rect(1)+rect(3),rect(2):rect(2)+rect(4),:) = 2;
N_tu = (1+rect(3))*(1+rect(4));
N_tb = prod(sz) - N_tu;
N = prod(sz);

foreColors = reshape(im(crop == 2),[N_tu 3]);
backColors = reshape(im(crop == 1),[N_tb 3]);
Z = reshape(im,[prod(sz) 3]);

options = statset('Display','final','MaxIter',200);
gmmBack = fitgmdist(backColors,K_num,'Options',options);
gmmFore = fitgmdist(foreColors,K_num,'Options',options);

%% Extract GMM parameters and initilisation
% matlab indices 1 - background, 2 - foreground

p = [gmmBack.PComponents; gmmFore.PComponents]'; %P(k,alpha)
mu = cat(3,gmmBack.mu', gmmFore.mu'); % mu(:,k,alpha)
Sigma = cat(4,gmmBack.Sigma, gmmFore.Sigma); %sigma(:,:,k,alpha)

alpha = 2*ones(N_tu,1);
Z = reshape(im,[N 3]);
Z_tu = reshape(im(rect(1):rect(1)+rect(3),rect(2):rect(2)+rect(4)),[N 3]);
%% Iterations

% Step 1: find k_n
K = zeros(N,1);
K(alpha == 1) = cluster(gmmBack,Z(alpha == 1,:));
K(alpha == 2) = cluster(gmmFore,Z(alpha == 2,:));

% Step 2: Learn GMM paramets
for k = 1:K_num
    for a = 1:2
        data = Z((K==k) & (alpha == a),:);
        mu(:,k,a) = mean(data)';
        Sigma(:,:,k,a) = cov(data);
        p(k,a) = size(data,1)/sum(alpha == a);
    end
end

% Step 3: Estimate segmentation
class = alpha';
unary = zeros(2,N);
for a = 1:2
    for n = 1:N
        unary(a,n) = -log(p(k(n),a)) + 1/2*log(det(:,:,k(n)))
    end
end

